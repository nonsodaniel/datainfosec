{"version":3,"sources":["components/layouts/Navbar.js","components/layouts/Login.js","components/layouts/Register.js","components/Profile/Profile.js","components/Profile/Staff.js","components/Profile/EditStaff.js","components/Profile/ViewStaff.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","handleLogout","e","preventDefault","console","log","_this","props","history","push","react_default","a","createElement","Fragment","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","this","Component","withRouter","Login","state","email","isLoading","handleChange","setState","Object","defineProperty","target","value","handleSubmit","obj","fetch","concat","method","headers","Content-Type","body","JSON","stringify","then","res","json","response","statuscode","swal","localStorage","setItem","data","setTimeout","placeholder","onChange","Signup","fullname","dob","image","_this$state","images","previewFile","preview","document","getElementById","file","querySelector","files","reader","FileReader","addEventListener","src","result","imgStr","readAsDataURL","accept","height","alt","Profile","parse","getItem","_this$state$data","$","require","DataTable","Staff","category","fetchAdmins","_callee","regenerator_default","wrap","_context","prev","next","adminData","admin","length","searchBox","inputs","style","float","classList","add","stop","handleEdit","isEdit","handleView","_this2","background","width","map","o","i","key","_id","staff_dp","dist_default","fromNow","createdAt","left","fontSize","StaffDetails","staff","isUpdated","match","params","status","staffData","ViewStaff","disabled","App","BrowserRouter","layouts_Navbar","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11316923.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './assets/css/style.css'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\n\r\nclass Navbar extends Component {\r\n  handleLogout = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.props)\r\n    this.props.history.push('/register')\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <header>\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              <div className=\"logo\">\r\n\r\n              </div>\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <div className=\"list-container\">\r\n\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">Profile</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/staff\" className=\"nav-link\">Staff</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\"><button className=\"btn  btn-logIn border text-dark bg-white\">LOG IN</button></Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/register\" className=\"nav-link\"><button className=\"btn text-white btn-signUp\">SIGN UP</button></Link>\r\n                  </li>\r\n                  <li className=\"nav-item\" onClick={this.handleLogout}>\r\n                    <Link to=\"#\" className=\"nav-link\"><button className=\"btn text-white btn-signOut\">SIGN OUT</button></Link>\r\n                  </li>\r\n\r\n                </ul>\r\n\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './assets/css/style.css'\r\nimport { Link } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        isLoading: false\r\n    };\r\n    handleChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n        console.log(this.state);\r\n    };\r\n    handleSubmit = (e) => {\r\n        let base_url = \"http://localhost:4000/api\"\r\n\r\n        e.preventDefault()\r\n        let { email } = this.state\r\n\r\n        let obj = { email };\r\n        console.log(\"obj\", obj, this.state);\r\n\r\n        fetch(`${base_url}/admin/authenticate`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(obj)\r\n        }).then(res => {\r\n            return res.json()\r\n        })\r\n            .then((response) => {\r\n                console.log(\"login response\", response)\r\n                if (response.statuscode === 200) {\r\n                    localStorage.setItem(\"staff\", JSON.stringify(response.data))\r\n                    swal(\"Response\", \"Login Successful\", \"success\");\r\n                    setTimeout(this.props.history.push('/staff'), 2000)\r\n\r\n                } else {\r\n                    return swal(\"Response\", \"An error occured! Please recheck and try again\", \"failed\")\r\n                }\r\n\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"login\">\r\n                    <div className=\"container login-container\">\r\n                        <h2 className=\"text-center login-text\">Log In</h2>\r\n                        <form className=\"form mx-auto\">\r\n                            <input type=\"email\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" id=\"email\" placeholder=\"Email\" onChange={this.handleChange} /><br />\r\n                            <button className=\"col-md-7 btn btn-primary btn-login\" onClick={this.handleSubmit}>Log In</button><br />\r\n                        </form>\r\n\r\n                        <div className=\"d-flex justify-content-center not-a-member\">\r\n                            <div className=\"font-size-small\">Not a member yet?</div>\r\n                            <div>Sign Up</div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport './assets/css/style.css'\r\nimport { Link } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nexport default class Signup extends Component {\r\n    state = {\r\n        fullname: \"\",\r\n        email: \"\",\r\n        dob: \"\",\r\n        state: \"\",\r\n        image: \"\",\r\n        isLoading: false\r\n    };\r\n    handleChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n        console.log(this.state);\r\n    };\r\n    handleSubmit = (e) => {\r\n        let base_url = \"http://localhost:4000/api\"\r\n\r\n        e.preventDefault()\r\n        let { fullname, email, dob, state, images, id } = this.state\r\n\r\n        let obj = { fullname, email, dob, state, images };\r\n        console.log(\"obj\", obj, this.state);\r\n\r\n        fetch(`${base_url}/admin/register`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(obj)\r\n        }).then(res => {\r\n            return res.json()\r\n        })\r\n            .then((response) => {\r\n                console.log(\"Update response\", response)\r\n                if (response.statuscode === 200) {\r\n                    localStorage.setItem(\"staff\", JSON.stringify(response.data))\r\n                    swal(\"Response\", \"Successfully Created a Staff\", \"success\");\r\n                    setTimeout(this.props.history.push('/staff'), 2000)\r\n\r\n                } else {\r\n                    return swal(\"Response\", \"An error occured! Please recheck and try again\", \"failed\")\r\n                }\r\n\r\n            })\r\n    }\r\n    previewFile = () => {\r\n        var preview = document.getElementById(\"image-box\");\r\n        var file = document.querySelector(\"input[type=file]\").files[0];\r\n        var reader = new FileReader();\r\n\r\n        reader.addEventListener(\r\n            \"load\",\r\n            () => {\r\n                preview.src = reader.result;\r\n                let imgStr = reader.result;\r\n                this.setState({ image: imgStr });\r\n                console.log(\"My file result\", imgStr);\r\n            },\r\n            false\r\n        );\r\n\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"login\">\r\n                    <div className=\"container login-container\">\r\n                        <h2 className=\"text-center login-text\">Sign Up</h2>\r\n                        <form className=\"form mx-auto\">\r\n                            <input type=\"text\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" id=\"fullname\" placeholder=\"Fullname\" onChange={this.handleChange} /><br />\r\n                            <input type=\"email\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" id=\"email\" placeholder=\"email\" onChange={this.handleChange} /><br />\r\n                            <input type=\"date\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" id=\"dob\" placeholder=\"Date of Birth\" onChange={this.handleChange} /><br />\r\n                            <input type=\"text\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" id=\"state\" placeholder=\"State of origin\" onChange={this.handleChange} /><br />\r\n                            <input type=\"file\" accept=\"image/*\" className=\"form-control mb-2 mr-sm-2 col-md-7\" id=\"images\" placeholder=\"City\" onChange={this.previewFile} />\r\n                            <img src=\"\" height=\"200\" id=\"image-box\" alt=\"\" className=\"mb-4\" />\r\n                            <button className=\"col-md-7 btn btn-primary btn-login\" onClick={this.handleSubmit}>Create</button><br />\r\n                        </form>\r\n\r\n                        <div className=\"d-flex justify-content-center not-a-member\">\r\n                            <div className=\"font-size-small\">Not a member yet?</div>\r\n                            <div>Sign Up</div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './assets/Profile.css'\r\n\r\nexport default class Profile extends Component {\r\n    state = {\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        let data = JSON.parse(localStorage.getItem(\"staff\"))\r\n        console.log(\"real data\", data)\r\n        this.setState({ data })\r\n    }\r\n    render() {\r\n        let { fullname, dob, email, state } = this.state.data\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 left-div\">\r\n                            <div className=\"img-div mx-auto\">\r\n\r\n                            </div>\r\n                            <h5 className=\"text-center\">{fullname}</h5>\r\n                            <h6 className=\"text-center\">{email}</h6> <br />\r\n                        </div>\r\n                        <div className=\"col-md-8 right-div\">\r\n                            <div className=\"top-right-div d-flex mx-auto\">\r\n                                <ul>\r\n                                    <li className=\"list-title\">Email:</li>\r\n                                    <li className=\"list-title\">Birth Date:</li>\r\n                                    <li className=\"list-title\">State of origin</li>\r\n                                </ul>\r\n                                <ul>\r\n                                    <li className=\"list-desc\">{email}</li>\r\n                                    <li className=\"list-desc\">{dob}</li>\r\n                                    <li className=\"list-desc\">{state}</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"bottom-right-div mx-auto\">\r\n                                <h2 className=\"text-center\"> A little about me</h2>\r\n                                <p className=\"\">\r\n                                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Omnis modi ipsa quis! Cum hic quam quibusdam, tempore perspiciatis dolores, debitis aliquid placeat eius, facilis ullam laborum iste cumque aut mollitia!\r\n\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport swal from 'sweetalert';\r\nimport Moment from \"react-moment\";\r\nimport { Link } from 'react-router-dom'\r\nimport '../Profile/assets/Profile.css'\r\n\r\n\r\nconst $ = require('jquery');\r\n$.DataTable = require(\"datatables.net\")\r\n\r\n\r\nexport default class Staff extends Component {\r\n    state = {\r\n        data: [], category: []\r\n    }\r\n    componentDidMount() {\r\n        // console.log(\"yepa\", this.props)\r\n        // this.fetchCategory()\r\n        this.fetchAdmins()\r\n    }\r\n\r\n    fetchAdmins = async () => {\r\n\r\n        let base_url = \"http://localhost:4000/api\"\r\n        await fetch(`${base_url}/admin/`).then((response) => {\r\n            return response.json()\r\n        }).then((adminData) => {\r\n            // console.log(\"tomiwa\", adminData.data)\r\n            this.setState({ admin: adminData.data.length ? adminData.data : null });\r\n            $(\"#example\").DataTable()\r\n            let searchBox = document.querySelector(\"#example_filter\");\r\n            let inputs = document.querySelector(\"input\")\r\n            searchBox.style.float = \"right\";\r\n            inputs.classList.add(\"form-control\")\r\n        })\r\n    }\r\n    handleEdit = (e) => {\r\n        this.setState({ isEdit: true })\r\n        this.props.history.push(`/edit-staff/${e.target.id}`)\r\n    }\r\n    handleView = (e) => {\r\n        this.setState({ isEdit: true })\r\n        this.props.history.push(`/view-staff/${e.target.id}`)\r\n    }\r\n\r\n    render() {\r\n        const adminData = this.state.admin;\r\n        // let { adminData } = this.state\r\n        return (\r\n            <div className=\"\">\r\n\r\n                <div className=\"main-content-container container-fluid px-4\" style={{ background: \"white\" }}>\r\n                    <div className=\"card-body\" style={{ background: \"white\" }}>\r\n                        <Link to=\"/register\"><button className=\"btn btn-primary add-staff-btn\">Add Staff</button></Link>\r\n                        <table id=\"example\" className=\"table table-striped table-bordered table-hover\" width=\"100%\" >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>S/n</th>\r\n                                    <th> Photo</th>\r\n                                    <th> Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Birth Date</th>\r\n                                    <th>State of Origin</th>\r\n                                    <th>Date Created</th>\r\n                                    <th>View</th>\r\n                                    <th>Edit</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {\r\n                                    adminData ? (\r\n                                        adminData.map((o, i) => {\r\n                                            console.log(\"my data\", o, i, o.fullname);\r\n                                            return (\r\n                                                <tr key={o._id}>\r\n                                                    <td>{i + 1}</td>\r\n                                                    <td> <img className=\"staff-photo\" src={o.staff_dp} alt=\"..\" /> </td>\r\n                                                    <td>{o.fullname}</td>\r\n                                                    <td>{o.email}</td>\r\n                                                    <td> <Moment fromNow>{o.dob}</Moment> </td>\r\n                                                    <td>{o.state}</td>\r\n                                                    <td><Moment fromNow>{o.createdAt}</Moment></td>\r\n                                                    <td><button className=\"btn btn-info btn-xs action-btn\" onClick={this.handleView} id={o._id}><i className=\"material-icons\" id={o._id} style={{ left: \"-6px\", fontSize: \"13px\" }}>local_see</i></button></td>\r\n                                                    <td><button className=\"btn btn-primary btn-xs action-btn\" onClick={this.handleEdit} id={o._id}><i className=\"material-icons\" id={o._id} style={{ left: \"-6px\", fontSize: \"13px\" }}>mode_edit</i></button></td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    ) : (\r\n                                            <div>No data to show</div>\r\n                                        )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../layouts/assets/css/style.css'\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nexport default class StaffDetails extends Component {\r\n    state = {\r\n        staff: [], isLoading: false,\r\n        email: \"\", fullname: \"\",\r\n        dob: \"\", state: \"\", image: \"\",\r\n        isUpdated: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        let base_url = \"http://localhost:4000/api\"\r\n\r\n        let id = this.props.match.params.id;\r\n        fetch(`${base_url}/admin/${id}`).then((response) => {\r\n            return response.json()\r\n        }).then((staffData) => {\r\n            console.log(this.props)\r\n            let data = staffData.data\r\n            let { fullname, email, dob, state } = data\r\n            this.setState({ fullname, email, dob, state })\r\n        })\r\n        console.log()\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        let base_url = \"http://localhost:4000/api\"\r\n\r\n        e.preventDefault()\r\n        let id = this.props.match.params.id;\r\n        let fullname = document.querySelector(\"#fullname\").value;\r\n        let email = document.querySelector(\"#email\").value;\r\n        let dob = document.querySelector(\"#dob\").value;\r\n        let state = document.querySelector(\"#state\").value;\r\n\r\n        let obj = { fullname, email, dob, state };\r\n        console.log(\"obj\", obj);\r\n\r\n        fetch(`${base_url}/admin/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(obj)\r\n        }).then((response) => {\r\n            console.log(\"Update response\", response)\r\n            if (response.status === 200) {\r\n                swal(\"Response\", \"Successfully updated staff\", \"success\");\r\n                setTimeout(this.props.history.push('/staff'), 2000)\r\n\r\n            } else {\r\n                return swal(\"Response\", \"Update Failed\", \"failed\")\r\n            }\r\n\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"login\">\r\n                    <div className=\"container login-container\">\r\n                        <h2 className=\"text-center login-text\">Edit Details</h2>\r\n                        <form className=\"form mx-auto\">\r\n                            <input type=\"text\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" value={this.state ? this.state.fullname : \"\"} id=\"fullname\" placeholder=\"Fullname\" onChange={this.handleChange} /><br />\r\n                            <input type=\"email\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" value={this.state ? this.state.email : \"\"} id=\"email\" placeholder=\"email\" onChange={this.handleChange} /><br />\r\n                            <input type=\"date\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" value={this.state ? this.state.dob : \"\"} id=\"dob\" placeholder=\"Date of Birth\" onChange={this.handleChange} /><br />\r\n                            <input type=\"text\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" value={this.state ? this.state.state : \"\"} id=\"state\" placeholder=\"State of origin\" onChange={this.handleChange} /><br />\r\n                            <button className=\"col-md-7 btn btn-primary btn-login\" onClick={this.handleSubmit}>Update</button><br />\r\n                        </form>\r\n\r\n                    </div>\r\n                </section>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport '../layouts/assets/css/style.css'\r\n\r\n\r\nexport default class ViewStaff extends Component {\r\n    state = {\r\n        staff: [], isLoading: false,\r\n        email: \"\", fullname: \"\",\r\n        dob: \"\", state: \"\", image: \"\",\r\n        isUpdated: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        let base_url = \"http://localhost:4000/api\"\r\n\r\n        let id = this.props.match.params.id;\r\n        fetch(`${base_url}/admin/${id}`).then((response) => {\r\n            return response.json()\r\n        }).then((staffData) => {\r\n            console.log(this.props)\r\n            let data = staffData.data\r\n            let { fullname, email, dob, state } = data\r\n            this.setState({ fullname, email, dob, state })\r\n        })\r\n        console.log()\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"login\">\r\n                    <div className=\"container login-container\">\r\n                        <h2 className=\"text-center login-text\">View Details</h2>\r\n                        <form className=\"form mx-auto\">\r\n                            <input type=\"text\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" value={this.state ? this.state.fullname : \"\"} id=\"fullname\" placeholder=\"Fullname\" onChange={this.handleChange} disabled /><br />\r\n                            <input type=\"email\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" value={this.state ? this.state.email : \"\"} id=\"email\" placeholder=\"email\" onChange={this.handleChange} disabled /><br />\r\n                            <input type=\"date\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" value={this.state ? this.state.dob : \"\"} id=\"dob\" placeholder=\"Date of Birth\" onChange={this.handleChange} disabled /><br />\r\n                            <input type=\"text\" className=\"form-control mb-2 mr-sm-2 col-md-7 shadow-none \" value={this.state ? this.state.state : \"\"} id=\"state\" placeholder=\"State of origin\" onChange={this.handleChange} disabled /><br />\r\n                        </form>\r\n\r\n                    </div>\r\n                </section>\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/layouts/Navbar\";\r\nimport Login from \"./components/layouts/Login\";\r\nimport Signup from \"./components/layouts/Register\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Staff from \"./components/Profile/Staff\";\r\nimport StaffDetails from \"./components/Profile/EditStaff\";\r\nimport ViewStaff from \"./components/Profile/ViewStaff\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"app wrapper\" id=\"wrapper\" >\r\n          <Navbar />\r\n          <Route exact path=\"/\" component={Profile} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Signup} />\r\n          <Route exact path=\"/staff\" component={Staff} />\r\n          <Route exact path=\"/edit-staff/:id\" component={StaffDetails} />\r\n          <Route exact path=\"/view-staff/:id\" component={ViewStaff} />\r\n\r\n\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}